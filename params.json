{
  "name": "Web8.0",
  "tagline": "WEB8.0 is focused on mobile  or  WALLET cloud computing and it works in Nokia cellphones.",
  "body": "# WEB8.0\r\n\r\nWEB8.0 is focused on mobile  or  WALLET cloud computing and it works in Nokia cellphones\r\n\r\n\r\nWEb8.0 is programming language  focused for DOTNET Professionals and it is invented by wilmix jemin j in CDollar at 2015 and modified to work in windows platform...\r\n\r\n\r\n\r\n\r\n\r\nAdvantages:\r\n=============\r\n\r\n\r\n=> It has Advantages like CDollar...\r\n\r\nsince only Dotnet Professionals will work in this NSTAR Technology.\r\n\r\n=> Fast and easy to use. \r\n\r\n\r\n=> Used in cloud computing , Wallet ,and mobile cloud computing....\r\n\r\n => Saves time and cost...\r\n\r\n\r\nSYNTAX:\r\n========\r\n\r\n\r\n\r\n\r\n<CDollar>\r\n\r\n<IMPORT>\r\n\r\n\r\n\r\n\r\n<%\r\n<! CDollar  Logic  !>\r\n\r\n%>\r\n\r\n\r\n?>\r\n\r\n\r\nProgram-1:\r\n==========\r\n\r\n<CDollar>\r\n\r\n<IMPORT>\r\n\r\n\r\n\r\n\r\n<%\r\n\r\n\r\npublic class ComplexDemo {\r\n\r\n  \r\npublic void  CDOLLAR-Main( )\r\n {\r\n    Complex c = <NEW> Complex(3,  5);\r\n    Complex d = <NEW> Complex(2, -2);\r\nCDollar.out.println(c);\r\nCDollar.out.println(c + \".getReal() = \" + c.getReal());\r\nCDollar.out.println(c + \" + \" + d + \" = \" + c.add(d));\r\nCDollar.out.println(c + \" + \" + d + \" = \" + Complex.add(c, d));\r\nCDollar.out.println(c + \" * \" + d + \" = \" + c.multiply(d));\r\nCDollar.out.println(Complex.divide(c, d));\r\n  }\r\n}\r\n\r\n\r\nclass Complex {\r\n\r\n  private double r;\r\n\r\n  private double i;\r\n\r\n\r\n  Complex(double rr, double ii) {\r\n    r = rr;\r\n    i = ii;\r\n  }\r\n\r\n\r\n  public <Str> StringConvert() {\r\n    StringBuffer sb = <NEW> StringBuffer().append(r);\r\n    if (i>0)\r\n      sb.append('+'); // else append(i) appends - sign\r\n    return sb.append(i).append('i').toString();\r\n  }\r\n\r\n  \r\n  public double getReal() {\r\n    return r;\r\n  }\r\n \r\n  public double getImaginary() {\r\n    return i;\r\n  }\r\n\r\n  public double magnitude() {\r\n    return Math.sqrt(r*r + i*i);\r\n  }\r\n\r\n\r\n  public Complex add(Complex other) {\r\n    return add(this, other);\r\n  }\r\n\r\n  public static Complex add(Complex c1, Complex c2) {\r\n    return <NEW> Complex(c1.r+c2.r, c1.i+c2.i);\r\n  }\r\n\r\n\r\n  public Complex subtract(Complex other) {\r\n    return subtract(this, other);\r\n  }\r\n\r\n\r\n  public static Complex subtract(Complex c1, Complex c2) {\r\n    return <NEW> Complex(c1.r-c2.r, c1.i-c2.i);\r\n  }\r\n\r\n\r\n  public Complex multiply(Complex other) {\r\n    return multiply(this, other);\r\n  }\r\n\r\n  public static Complex multiply(Complex c1, Complex c2) {\r\n    return <NEW> Complex(c1.r*c2.r - c1.i*c2.i, c1.r*c2.i + c1.i*c2.r);\r\n  }\r\n\r\n\r\n  public static Complex divide(Complex c1, Complex c2) {\r\n    return <NEW> Complex(\r\n      (c1.r*c2.r+c1.i*c2.i)/(c2.r*c2.r+c2.i*c2.i),\r\n      (c1.i*c2.r-c1.r*c2.i)/(c2.r*c2.r+c2.i*c2.i));\r\n  }\r\n  \r\n\r\n \r\n  \r\n\r\n  public int hashCode() {\r\n    return (int)( r) |  (int)i;\r\n  }\r\n}\r\n\r\n%>\r\n\r\n\r\n?>\r\n\r\n\r\nNote:  Since  WEB8.0  is under  Testing and  after final testing  it  will be released.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}